spring.application.name=sigac-api

# Server Configuration
server.port=8080

# R2DBC Configuration
spring.r2dbc.url=r2dbc:postgresql://localhost:5432/sigac_db
spring.r2dbc.username=postgres
spring.r2dbc.password=admin
spring.sql.init.mode=never
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none

# Logging Configuration
logging.level.org.springframework.r2dbc=DEBUG
logging.level.io.r2dbc.postgresql.QUERY=DEBUG
logging.level.io.github.joabsonlg.sigac_api=DEBUG

# JSON Configuration
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false

# Validation Configuration
spring.webflux.problemdetails.enabled=true

# Application Info
app.version=1.0.0

# SpringDoc OpenAPI Configuration
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.swagger-ui.filter=true

# JWT Configuration
sigac.jwt.secret=sigac-jwt-secret-key-for-production-change-this-to-a-very-secure-random-string-of-at-least-256-bits
sigac.jwt.access-token-expiration=3600
sigac.jwt.refresh-token-expiration=604800

# Security Configuration
sigac.security.cors.allowed-origins=http://localhost:3000,http://localhost:8080,http://localhost:8081
sigac.security.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
sigac.security.cors.allowed-headers=*
sigac.security.cors.allow-credentials=true
